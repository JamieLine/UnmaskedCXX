Driver -> Class which takes in a filepath and writes the corresponding tests to disk
MicroParsers -> A collection of functions which parse the data out of a meaningfully large segment (e.g. AcceptUnmaskedPredicateTest)
Acceptors -> A collection of functions which parse the smallest fragments, which are in some sense devoid of meaning on their own (e.g AcceptNonSpecialCharToken, AcceptIndexValuePair)
ResultWriters -> A collection of functions which take in ParsedResults<T> and outputs source code strings

Parser-fragment is a generic term for a MicroParser or an Acceptor

As a rough rule, a Driver does the whole job on a file
A MicroParser does some useful segment of a job which has a clear goal
An Acceptor does some repeated or nameable segment which has no clear goal

Each parser-fragment is expected to move the iterator it gets as an argument by reference.
